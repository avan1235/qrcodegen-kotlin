{
    "type": "in.procyk.qrcodegen.QrCodeTestData.Success",
    "input": {
        "type": "in.procyk.qrcodegen.QrCodeTestData.Input.Binary",
        "bytes": [
            -36,
            75,
            -72,
            -78,
            -80,
            -103,
            120,
            -26,
            89,
            -76,
            -123,
            -80,
            58,
            36,
            21,
            57,
            25,
            -105,
            -54,
            37,
            -110,
            111,
            61,
            -94,
            -41,
            66,
            -43,
            -35,
            111,
            -41,
            3,
            -33,
            68,
            -50,
            60,
            -116,
            -70,
            -59,
            51,
            -60,
            -63,
            -77,
            -28,
            39,
            68,
            24,
            5,
            -17,
            -31,
            0,
            46,
            -81,
            10,
            -62,
            -94,
            5,
            -24,
            -3,
            117,
            72,
            -46,
            82,
            -126,
            -59,
            -116,
            37,
            -107,
            23,
            -38,
            10,
            -17,
            -102,
            -99,
            -44,
            51,
            -46,
            -27,
            125,
            95,
            21,
            13,
            -20,
            -53,
            82,
            -122,
            29,
            -105,
            102,
            -38,
            64,
            -104,
            -84,
            -107,
            4,
            -25,
            9,
            -74,
            69,
            100,
            74,
            93,
            32,
            -1,
            -22
        ],
        "eccName": "LOW"
    },
    "expectedSize": 37,
    "expectedMask": 1,
    "expectedErrorCorrectionLevel": "LOW",
    "expectedData
}