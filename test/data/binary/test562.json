{
    "type": "in.procyk.qrcodegen.QrCodeTestData.Success",
    "input": {
        "type": "in.procyk.qrcodegen.QrCodeTestData.Input.Binary",
        "bytes": [
            -69,
            -25,
            28,
            -102,
            32,
            90,
            -3,
            89,
            111,
            68,
            6,
            -38,
            76,
            9,
            -89,
            60,
            -37,
            30,
            111,
            38,
            -85,
            -103,
            -122,
            -118,
            -67,
            10,
            -115,
            122,
            -119,
            100,
            -110,
            -22,
            65,
            -73,
            86,
            0,
            126,
            -73,
            47,
            -109,
            -61,
            -75,
            -78,
            -88,
            70,
            26,
            -29,
            -2,
            -52,
            59,
            -23,
            3,
            -121,
            -8,
            47,
            108,
            76,
            -39,
            -73,
            -59,
            113,
            -25,
            -77,
            115,
            36,
            114,
            107,
            -10,
            -120,
            -44,
            34,
            27,
            -106,
            -36,
            7,
            -8,
            -62,
            -82,
            53,
            90,
            -72,
            -65,
            10,
            100,
            -113,
            -66,
            62,
            -11,
            63,
            -98,
            -104,
            -34,
            116,
            -31,
            5,
            84,
            -118,
            14,
            -22,
            -47,
            -91,
            -120,
            65,
            89,
            -87,
            -71,
            25,
            -76,
            -50,
            1,
            36,
            62,
            -25,
            33,
            6,
            -20,
            -36,
            91,
            -80,
            65,
            52,
            -112,
            84,
            -22,
            -87,
            11,
            102,
            -126,
            54,
            70,
            20,
            -65,
            11,
            -73,
            -75
        ],
        "eccName": "QUARTILE"
    },
    "expectedSize": 57,
    "expectedMask": 3,
    "expectedErrorCorrectionLevel": "QUARTILE",
    "expectedData
}