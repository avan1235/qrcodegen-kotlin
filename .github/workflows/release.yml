name: Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  test:
    name: Run tests on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: corretto

      - name: Run tests on ${{ matrix.os }}
        run: ${{ runner.os == 'Windows' && '.\gradlew.bat' || './gradlew' }} test:allTests

  release:
    name: Create release
    runs-on: macos-latest
    needs: test
    permissions:
      contents: write   # needed to create a GitHub release
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Extract version name
        id: extract_name
        run: echo "name=$(echo ${GITHUB_REF##*/})" >>$GITHUB_OUTPUT
        shell: bash

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: Generate changelog
        id: changelog
        uses: metcalfc/changelog-generator@v4.1.0
        with:
          mytoken: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          name: Release ${{ steps.extract_name.outputs.name }}
          body: ${{ steps.changelog.outputs.changelog }}

  publish-release:
    name: Publish release
    runs-on: macos-latest
    needs: release
    permissions:
      contents: read    # only needs repo access to read sources
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: Extract version from tag
        uses: damienaicheh/extract-version-from-tag-action@v1.1.0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: corretto

      - name: Publish to Maven Central
        run: ./gradlew lib:publishAllPublicationsToMavenCentralRepository
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.OSSRH_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.OSSRH_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyId: ${{ secrets.SIGNING_KEY_ID }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.SIGNING_KEY }}
          ORG_GRADLE_PROJECT_version: ${{ env.MAJOR }}.${{ env.MINOR }}.${{ env.PATCH }}

  publish-docs:
    name: Publish documentation
    runs-on: ubuntu-latest
    needs: publish-release
    permissions:
      contents: write   # required to push to gh-pages
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: corretto

      - name: Build documentation
        run: ./gradlew lib:dokkaHtml

      - name: Deploy documentation to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./lib/build/dokka/html
          force_orphan: true
          cname: qrcodegen.kdocs.procyk.in
